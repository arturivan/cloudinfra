name: Deploy Bicep

on:
  push:
    branches:
      - main
    paths:
      - 'bicep/**'

jobs:
  security-scanning:
    runs-on: ubuntu-latest
    steps:
      - name: Run Checkov Security Scan
        uses: bridgecrewio/checkov-action@v12
        with:
          directory: "bicep"
          framework: "bicep"
        continue-on-error: true # Ensures the workflow continues even if Checkov fails
        id: checkov_bicep

      - name: Install Checkov
        run: pip3 install checkov

      - name: Save Checkov Logs for Bicep
        run: checkov --directory bicep --framework bicep --output cli > checkov_bicep.log

      - name: Upload Checkov Bicep Logs
        uses: actions/upload-artifact@v4
        with:
          name: checkov-bicep-logs
          path: checkov_bicep.log

  deploy-rg:
    runs-on: ubuntu-latest
    needs: security-scanning
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Login to Azure
        uses: Azure/login@v2.2.0
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy Resource Group
        run: |
          az deployment sub create \
            --location westeurope \
            --template-file bicep/rg/resource-group.bicep \
            --parameters @bicep/rg/rg-parameters.json

      - name: Get Resource Group Name
        id: get-rg-name
        run: |
          RG_NAME=$(jq -r .resourceGroupName bicep/rg/rg-parameters.json)
          echo "Resource Group Name: $RG_NAME"
          echo "::set-output name=rg_name::$RG_NAME"

  deploy-infra:
    name: Deploy Bicep
    runs-on: ubuntu-latest
    needs: deploy-rg # Ensures RG is created first
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Login to Azure
        uses: Azure/login@v2.2.0
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy Resources
        run: |
          az deployment group create \
            --name vnetpeering \
            --resource-group test-rg \
            --template-file bicep/peering/main.bicep \
            --parameters bicep/peering/parameters.bicepparam
